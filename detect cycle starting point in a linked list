https://leetcode.com/problems/linked-list-cycle-ii/

class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        
        if(head==NULL){
            return NULL;
        }
        ListNode *fast=head->next,*slow=head;
        while(fast!=NULL && fast->next!=NULL){
            if(fast==slow){
                break;
            }
            fast = fast->next->next;
            slow = slow->next;
            
        }
        fast = head;
        while(fast!=slow){
            slow = slow->next;
            fast=fast->next;
        }
        return fast;
    }
};
